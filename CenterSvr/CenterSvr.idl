// CenterSvr.idl : CenterSvr 的 IDL 源
//

// 此文件将由 MIDL 工具处理以
// 产生类型库(CenterSvr.tlb)和封送处理代码。

import "oaidl.idl";
import "ocidl.idl";

// hs_enable 有效无效
typedef enum chair_enable
{
      CHAIR_DISABLE = 0,  // 无效
	  CHAIR_ENABLE        // 有效
}ENUM_CHAIR_ENABLE;

// hs_hot_state 表决
typedef enum hog_stat
{
      HOG_NULL = 0, // 无效
	  HOG_DOWN,     // 不抢
	  HOG_UP		// 抢
}ENUM_HOG_STAT;

// 角色
typedef enum player_role
{
      ROLE_ZHUANG = 0,
	  ROLE_XIAN
}ENUM_PLAYER_ROLE;


typedef struct _tagChairInfo 
{
	ENUM_CHAIR_ENABLE	hs_chair_enable;
	ENUM_HOG_STAT		hs_hot_state;	// 状态 未定， 叫，不叫
	ENUM_PLAYER_ROLE	hs_role;		// 角色 未定，闲， 庄
	LONGLONG			hs_chip;		// 筹
	DWORD				hs_enableHog;	// 能否Hog  FALSE--不能， TRUE---能
}ChairInfo, *PChairInfo;

// 座子信息
typedef struct _tagTableInfo 
{
	DWORD	ti_curCount; // 当前局数
	DWORD	ti_allCount; // 总局数
	LONGLONG ti_lowScore; // 底分
}TableInfo , *PTableInfo;

[
	object,
	uuid(FDCF44B6-3174-4D8A-B2EF-D9A159474D49),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IQPServer : IDispatch{
	[id(1)] HRESULT Hog([in] LONG nTableID, [in] LONG nChairID, [in] ENUM_HOG_STAT _hog);
	[id(2)] HRESULT CreateSub([in] LONG subType, [in] LONG tid );
};
[
	uuid(CC506581-6450-4B04-87C9-D519EA7AFDA9),
	version(1.0),
]
library CenterSvrLib
{
	importlib("stdole2.tlb");
	[
		uuid(6370FA5B-0048-4053-B645-036909DDA673)		
	]
	coclass QPServer
	{
		[default] interface IQPServer;
	};
};

import "shobjidl.idl";
